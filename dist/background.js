(()=>{"use strict";new class{constructor(){this.apiKey=null,this.imageDetail="auto",this.costLimit=0,this.costTracking={monthlyTokens:0,monthlyImages:0,estimatedCost:0,lastReset:(new Date).toISOString()},this.requestQueue=[],this.activeRequests=new Set,this.MAX_CONCURRENT=8,this.queueProcessor=null,this.initialize()}async initialize(){console.log("üîç Vinted Lens: Initializing background script");const e=await browser.storage.local.get(["apiKey","imageDetail","costLimit","monthlyUsage"]),t=e.apiKey;console.log("üîë Raw API key from storage:",t),console.log("üîë API key details:",{present:!!t,value:t,keyType:t?typeof t:"null",startsWith:t?t.substring(0,7):"n/a",length:t?t.length:0,storage_key_used:"apiKey"}),this.apiKey=t||null,console.log("üîë API key after assignment:",{value:this.apiKey,valid:this.isValidApiKey(this.apiKey)}),this.imageDetail=e.imageDetail||"auto",this.costLimit=e.costLimit||0,this.costTracking=e.monthlyUsage||{monthlyTokens:0,monthlyImages:0,estimatedCost:0,lastReset:(new Date).toISOString()},browser.storage.onChanged.addListener(((e,t)=>{"local"===t&&e.apiKey&&(console.log("üîÑ API key changed:",{oldValue:e.apiKey.oldValue?"[REDACTED]":null,newValue:e.apiKey.newValue?"[REDACTED]":null}),this.apiKey=e.apiKey.newValue||null,console.log("üîÑ API key after change:",{value:this.apiKey,valid:this.isValidApiKey(this.apiKey)}))}));const s=new Date(this.costTracking.lastReset),i=new Date;s.getMonth()===i.getMonth()&&s.getFullYear()===i.getFullYear()||(this.costTracking={monthlyTokens:0,monthlyImages:0,estimatedCost:0,lastReset:i.toISOString()},await this.saveCostTracking()),console.log("üîë Settings loaded:",{apiKeyPresent:!!this.apiKey,apiKeyValid:this.isValidApiKey(this.apiKey),imageDetail:this.imageDetail,costLimit:this.costLimit,costTracking:this.costTracking}),browser.runtime.onMessage.addListener(this.handleMessage.bind(this)),console.log("üëÇ Message listener set up")}async saveCostTracking(){await browser.storage.local.set({monthlyUsage:this.costTracking})}async updateCostTracking(e){if(this.costTracking.monthlyTokens+=e,this.costTracking.monthlyImages+=1,this.costTracking.estimatedCost=1e-5*this.costTracking.monthlyTokens+.2*this.costTracking.monthlyTokens*3e-5,await this.saveCostTracking(),this.costLimit>0&&this.costTracking.estimatedCost>this.costLimit)throw new Error("Monthly cost limit exceeded")}async handleMessage(e){"ANALYZE_PRODUCT"===e.type&&this.handleProductAnalysis(e.payload)}async processQueue(){if(0===this.requestQueue.length||this.activeRequests.size>=this.MAX_CONCURRENT)return void console.log("‚è∏Ô∏è Queue processing paused:",{queueLength:this.requestQueue.length,activeRequests:this.activeRequests.size,maxConcurrent:this.MAX_CONCURRENT});const e=this.requestQueue.shift();this.activeRequests.add(e.product.id),console.log("üîÑ Processing from queue:",{productId:e.product.id,queueLength:this.requestQueue.length,activeRequests:this.activeRequests.size,maxConcurrent:this.MAX_CONCURRENT});try{const t=performance.now(),s=await this.analyzeProduct(e),i=performance.now()-t;await this.sendToActiveTab({type:"ANALYSIS_COMPLETE",payload:{productId:e.product.id,analysis:{...s,timing:{...s.timing,total:i}}}})}catch(e){console.error("‚ùå Analysis failed:",e),await this.showToast({message:"Failed to analyze product",type:"error"})}finally{this.activeRequests.delete(e.product.id),this.processQueue()}this.activeRequests.size<this.MAX_CONCURRENT&&this.processQueue()}isValidApiKey(e){return!!e&&(e.startsWith("sk-")||e.startsWith("sk-proj-"))}handleProductAnalysis(e){if(console.log("üì¶ Queueing product:",e.product.id),!this.isValidApiKey(this.apiKey))return console.error("‚ùå No valid API key found"),void this.showToast({message:"Please set your API key in the extension options",type:"error"});this.requestQueue.push(e),console.log("üì• Added to queue:",{productId:e.product.id,queueLength:this.requestQueue.length,activeRequests:this.activeRequests.size,maxConcurrent:this.MAX_CONCURRENT}),this.activeRequests.size<this.MAX_CONCURRENT&&(console.log("‚ñ∂Ô∏è Starting queue processing"),this.processQueue())}async sendToActiveTab(e){const t=await browser.tabs.query({active:!0,currentWindow:!0});t[0]?.id&&await browser.tabs.sendMessage(t[0].id,e)}extractJsonFromResponse(e){const t=e.match(/```(?:json)?\n?(.*?)```/s);return t?t[1].trim():e.trim()}async analyzeProduct(e){if(!this.apiKey)throw new Error("API key is required");const{product:t,preferences:s,searchTerm:i}=e;await this.sendToActiveTab({type:"ANALYSIS_STATUS",payload:{stage:"start",productId:t.id,data:{prompt:`Analyzing if product matches either:\n${i?`- Search term: "${i}"`:""}\n${s.length>0?`- Preferences: ${s.join(", ")}`:""}`}}});const a=performance.now(),o=[{role:"user",content:[{type:"text",text:`Analyze if this product matches either:\n${i?`- Search term: "${i}"`:""}\n${s.length>0?`- Preferences: ${s.join(", ")}`:""}\n\nProduct details:\nTitle: ${t.title}\nDescription: ${t.description}\n\nRespond in JSON format:\n{\n  "matches": boolean,\n  "confidence": number between 0 and 1,\n  "matchedCriteria": string[], // "search" or the specific preference that matched\n  "description": string explaining why it matched or didn't match\n}`}]}];let n,r;try{const{data:e,mediaType:s}=await async function(e){const t=await fetch(e),s=await t.blob(),i=s.type||"image/jpeg";return new Promise(((e,t)=>{const a=new FileReader;a.onloadend=()=>{const t=a.result.split(",")[1];e({data:t,mediaType:i})},a.onerror=t,a.readAsDataURL(s)}))}(t.imageUrl);o[0].content.push({type:"image_url",image_url:{url:`data:${s};base64,${e}`,detail:this.imageDetail}});const i={model:"gpt-4o-mini",messages:o,max_tokens:300},c={"Content-Type":"application/json",Authorization:`Bearer ${this.apiKey}`};console.log("üîÑ OpenAI API Request:",{url:"https://api.openai.com/v1/chat/completions",method:"POST",headers:{...c,Authorization:"Bearer [REDACTED]"},body:JSON.stringify(i,null,2)}),n=await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:c,body:JSON.stringify(i)});const l=await n.text();if(console.log("üîÑ OpenAI API Response:",{status:n.status,statusText:n.statusText,headers:Object.fromEntries(n.headers.entries()),body:l}),!n.ok){let e=`API request failed (${n.status})`;if(401===n.status)e="Invalid API key. Make sure you're using a valid API key from platform.openai.com";else if(429===n.status)e="Rate limit exceeded. Please try again later.";else if(400===n.status)e="Invalid request format";else try{const t=JSON.parse(l);e+=`: ${t.error?.message||l}`}catch{e+=`: ${l}`}throw new Error(e)}r=JSON.parse(l);const h=performance.now()-a,d=r.usage.total_tokens;await this.updateCostTracking(d);const u=r.choices[0].message.content;await this.sendToActiveTab({type:"ANALYSIS_STATUS",payload:{stage:"complete",productId:t.id,data:{response:u,timing:{apiCall:h}}}});try{const e=this.extractJsonFromResponse(u);return console.log("üîÑ Extracted JSON:",{original:u,cleaned:e}),{...JSON.parse(e),timing:{total:h,apiCall:h}}}catch(e){throw await this.sendToActiveTab({type:"ANALYSIS_STATUS",payload:{stage:"error",productId:t.id,data:{error:"Failed to parse OpenAI response"}}}),new Error("Invalid analysis response format")}}catch(e){throw await this.sendToActiveTab({type:"ANALYSIS_STATUS",payload:{stage:"error",productId:t.id,data:{error:e instanceof Error?e.message:"Unknown error"}}}),e}}async showToast(e){await this.sendToActiveTab({type:"SHOW_TOAST",payload:e})}}})();
//# sourceMappingURL=background.js.map