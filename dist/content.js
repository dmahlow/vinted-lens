(()=>{"use strict";new class{constructor(){this.state={isEnabled:!0,isScanning:!1,preferences:[],currentSearch:null,scanProgress:null,endlessScroll:!1},this.scanQueue=[],this.activeProducts=new Set,this.MAX_CONCURRENT=8,this.observer=null,this.mutationObserver=null,this.observedProducts=new Set,this.initialize()}async initialize(){console.log("🔍 Vinted Lens: Initializing content script");const e=await browser.storage.local.get(["preferences","currentSearch","endlessScroll"]);this.state.preferences=e.preferences||[],this.state.currentSearch=e.currentSearch||null,this.state.endlessScroll=e.endlessScroll||!1,console.log("📋 Loaded preferences:",this.state.preferences),console.log("🔎 Current search:",this.state.currentSearch),console.log("♾️ Endless scroll:",this.state.endlessScroll),browser.runtime.onMessage.addListener(this.handleMessage.bind(this)),console.log("👂 Message listener set up"),this.state.endlessScroll&&(console.log("♾️ Setting up endless scroll mode"),this.state.isScanning=!0,console.log("🧹 Clearing stale analysis classes"),document.querySelectorAll(".vinted-lens-analyzed").forEach((e=>{e.classList.remove("vinted-lens-match","vinted-lens-hidden","vinted-lens-low-confidence","vinted-lens-analyzed"),e.removeAttribute("data-vinted-lens-id")})),this.setupIntersectionObserver(),this.setupMutationObserver())}handleMessage(e){switch(e.type){case"START_SCAN":this.handleStartScan(e.payload);break;case"STOP_SCAN":this.handleStopScan(e.payload);break;case"ANALYSIS_COMPLETE":this.handleAnalysisComplete(e.payload);break;case"ANALYSIS_STATUS":this.handleAnalysisStatus(e.payload);break;case"UPDATE_PREFERENCES":this.handlePreferencesUpdate(e.payload);break;case"UPDATE_SEARCH":this.handleSearchUpdate(e.payload);break;case"SHOW_TOAST":this.showToast(e.payload)}}handleAnalysisStatus(e){const{stage:t,productId:s,data:n}=e;switch(t){case"start":console.log(`🤖 Analyzing product ${s}:`,{prompt:n?.prompt});break;case"complete":console.log(`✅ Claude response for ${s}:`,{response:n?.response,timing:n?.timing});break;case"error":console.error(`❌ Analysis failed for ${s}:`,{error:n?.error})}}setupIntersectionObserver(){console.log("🔍 Setting up intersection observer"),this.observer=new IntersectionObserver((e=>{console.log("🔍 Intersection observer triggered:",{entries:e.length,intersecting:e.filter((e=>e.isIntersecting)).length}),e.forEach((e=>{if(e.isIntersecting){const t=e.target;console.log("🔍 Element intersecting:",{id:t.id,hasId:!!t.id,classes:t.classList.toString()});const s=t.getAttribute("data-vinted-lens-id");console.log("🔍 Checking product:",{productId:s,isObserved:!!s&&this.observedProducts.has(s),classes:t.classList.toString()}),s&&this.observedProducts.has(s)||this.queueProductForAnalysis(t)}}))}),{rootMargin:"50px",threshold:.1}),document.querySelectorAll(".feed-grid__item").forEach((e=>{e.classList.contains("vinted-lens-analyzed")||this.observer.observe(e)}))}setupMutationObserver(){console.log("🔍 Setting up mutation observer"),this.mutationObserver=new MutationObserver((e=>{e.forEach((e=>{e.addedNodes.forEach((e=>{e instanceof HTMLElement&&e.matches(".feed-grid__item")&&(e.classList.contains("vinted-lens-analyzed")||this.observer?.observe(e))}))}))}));const e=document.querySelector(".feed-grid");e&&this.mutationObserver.observe(e,{childList:!0,subtree:!0})}queueProductForAnalysis(e){const t=e.getAttribute("data-vinted-lens-id");console.log("🔄 Queueing product:",{productId:t,isScanning:this.state.isScanning,queueLength:this.scanQueue.length,activeProducts:this.activeProducts.size});const s=e.querySelector('img[data-testid="feed-item--image--img"]'),n=e.querySelector('[data-testid="feed-item--description-title"]'),i=e.querySelector('[data-testid="feed-item--overlay-link"]');if(s&&n&&i){if(s&&n&&i){const t={id:`item-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,element:e,imageUrl:s.src,title:n.textContent||"",description:i.getAttribute("title")||""};e.setAttribute("data-vinted-lens-id",t.id),this.observedProducts.add(t.id),this.scanQueue.push(t),this.activeProducts.size<this.MAX_CONCURRENT&&this.processNextProduct()}}else console.log("⚠️ Missing required elements:",{hasImage:!!s,hasTitle:!!n,hasDescription:!!i})}handleStartScan(e){this.state.isScanning?console.log("⏳ Scan already in progress"):(this.state.preferences=e.preferences,this.state.currentSearch=e.searchTerm,this.scanQueue=this.getUnanalyzedProducts(),0!==this.scanQueue.length?(this.state.isScanning=!0,this.state.scanProgress={total:this.scanQueue.length,current:0,currentItem:null,startTime:Date.now()},this.updateProgress(),this.state.endlessScroll&&!this.observer&&(this.setupIntersectionObserver(),this.setupMutationObserver()),this.processNextProduct()):this.showToast({message:"No items to analyze",type:"info"}))}handleStopScan(e){this.state.isScanning&&(console.log("🛑 Stopping scan:",{reason:e.reason,endlessScroll:this.state.endlessScroll}),this.scanQueue=[],this.activeProducts.clear(),this.state.endlessScroll||(this.state.isScanning=!1,this.state.scanProgress=null),this.state.endlessScroll||(this.observer&&(this.observer.disconnect(),this.observer=null),this.mutationObserver&&(this.mutationObserver.disconnect(),this.mutationObserver=null),this.observedProducts.clear()),this.showToast({message:"complete"===e.reason?"Scan complete":"Scan stopped",type:"error"===e.reason?"error":"info"}),this.updateProgress())}getUnanalyzedProducts(){const e=[];return document.querySelectorAll(".feed-grid__item:not(.vinted-lens-analyzed)").forEach(((t,s)=>{const n=t.querySelector('img[data-testid="feed-item--image--img"]'),i=t.querySelector('[data-testid="feed-item--description-title"]'),r=t.querySelector('[data-testid="feed-item--overlay-link"]');n&&i&&r&&e.push({id:`item-${Date.now()}-${s}`,element:t,imageUrl:n.src,title:i.textContent||"",description:r.getAttribute("title")||""})})),e}async processNextProduct(){if(this.state.isScanning){for(;this.scanQueue.length>0&&this.activeProducts.size<this.MAX_CONCURRENT;){const e=this.scanQueue.shift();console.log("🔄 Processing product:",e.id,{activeProducts:this.activeProducts.size,queueLength:this.scanQueue.length}),this.state.scanProgress&&(this.state.scanProgress.current++,this.state.scanProgress.currentItem=e.title,this.updateProgress()),e.element.setAttribute("data-vinted-lens-id",e.id),e.element.classList.add("vinted-lens-analyzing"),this.activeProducts.add(e.id),this.analyzeProduct(e).catch((t=>{console.error("❌ Analysis failed:",t),this.activeProducts.delete(e.id),e.element.classList.remove("vinted-lens-analyzing"),this.processNextProduct()}))}0===this.scanQueue.length&&0===this.activeProducts.size&&this.handleStopScan({reason:"complete"})}}async analyzeProduct(e){console.log("📤 Sending product for analysis:",{id:e.id,imageUrl:e.imageUrl,title:e.title,queueLength:this.scanQueue.length,activeProducts:this.activeProducts.size}),await browser.runtime.sendMessage({type:"ANALYZE_PRODUCT",payload:{product:{...e,element:void 0},preferences:this.state.preferences,searchTerm:this.state.currentSearch}})}handleAnalysisComplete(e){const{productId:t,analysis:s}=e;console.log("📥 Analysis complete:",{productId:t,matches:s.matches,confidence:s.confidence,timing:s.timing,queueSize:this.scanQueue.length});const n=document.querySelector(`.feed-grid__item[data-vinted-lens-id="${t}"]`);if(!n)return console.warn("⚠️ No element found for product:",t),this.activeProducts.delete(t),void this.processNextProduct();n.classList.remove("vinted-lens-analyzing"),n.classList.add("vinted-lens-analyzed"),n.classList.add("vinted-lens-transition"),setTimeout((()=>{s.matches?(n.classList.add("vinted-lens-match"),s.confidence<.8&&n.classList.add("vinted-lens-low-confidence")):n.classList.add("vinted-lens-hidden"),this.activeProducts.delete(t),this.processNextProduct()}),0)}updateProgress(){this.state.scanProgress&&browser.runtime.sendMessage({type:"SCAN_PROGRESS",payload:{progress:this.state.scanProgress}})}handlePreferencesUpdate(e){this.state.preferences=e.preferences,this.resetAnalysis()}handleSearchUpdate(e){this.state.currentSearch=e.search,this.resetAnalysis()}resetAnalysis(){this.state.isScanning&&this.handleStopScan({reason:"user"}),document.querySelectorAll(".vinted-lens-match, .vinted-lens-hidden, .vinted-lens-low-confidence, .vinted-lens-analyzed").forEach((e=>{e.classList.remove("vinted-lens-match","vinted-lens-hidden","vinted-lens-low-confidence","vinted-lens-analyzed"),e.removeAttribute("data-vinted-lens-id")}))}showToast(e){const t=document.createElement("div");t.className=`vinted-lens-toast ${e.type||""}`,t.textContent=e.message,document.body.appendChild(t),t.offsetHeight,t.classList.add("show"),setTimeout((()=>{t.classList.remove("show"),setTimeout((()=>t.remove()),300)}),e.duration||3e3)}}})();
//# sourceMappingURL=content.js.map